{"version":3,"sources":["GoodsList.tsx","api/goods.ts","types/Conditions.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","className","children","map","good","style","color","name","id","getAll","fetch","then","response","json","catch","Error","Conditions","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","all","_useState4","condition","setCondition","_useState5","_useState6","loading","setLoading","_useState7","_useState8","errorMsg","setErrorMsg","useEffect","first5","redGoods","sort","a","b","localeCompare","slice","length","err","message","finally","red","filter","_jsxs","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c33cea9e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"dropdown-content\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className=\"dropdown-item\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .catch(() => {\n      throw new Error('Something went wrong...');\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const redGoods = goods\n        .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n\n      if (redGoods.length) {\n        return redGoods;\n      }\n\n      throw new Error('There is no goods...');\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      const redGoods = goods.filter((good: Good) => good.color === 'red');\n\n      if (redGoods.length) {\n        return redGoods;\n      }\n\n      throw new Error('There is no red goods...');\n    })\n    .catch((err) => {\n      throw new Error(err);\n    });\n};\n","export enum Conditions {\n  all = 'all',\n  first5 = 'first5',\n  red = 'red',\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport { Conditions } from './types/Conditions';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [condition, setCondition] = useState(Conditions.all);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    switch (condition) {\n      case Conditions.first5:\n        get5First()\n          .then(setGoods)\n          .catch(err => {\n            setErrorMsg(err.message);\n            setGoods([]);\n          })\n          .finally(() => setLoading(false));\n        break;\n\n      case Conditions.red:\n        getRedGoods()\n          .then(setGoods)\n          .catch(err => {\n            setErrorMsg(err.message);\n            setGoods([]);\n          })\n          .finally(() => setLoading(false));\n        break;\n\n      default:\n        getAll()\n          .then(setGoods)\n          .catch(err => {\n            setErrorMsg(err.message);\n          })\n          .finally(() => setLoading(false));\n    }\n  }, [condition]);\n\n  return (\n    <div className=\"App box\">\n      <h1 className=\"title color-$cyan\">Dynamic list of Goods</h1>\n\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => setCondition(Conditions.all)}\n          className={cn('button', 'is-dark', {\n            'is-danger': condition === Conditions.all,\n          })}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => setCondition(Conditions.first5)}\n          className={cn('button', 'is-dark', {\n            'is-danger': condition === Conditions.first5,\n          })}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"red-button\"\n          className={cn('button', 'is-dark', {\n            'is-danger': condition === Conditions.red,\n          })}\n          onClick={() => setCondition(Conditions.red)}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      {loading && (\n        <span className=\"bulma-loader-mixin\" />\n      )}\n\n      {errorMsg && (\n        <p className=\"notification is-warning\">\n          {errorMsg}\n        </p>\n      )}\n\n      {!!goods.length && (\n        <GoodsList goods={goods} />\n      )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}